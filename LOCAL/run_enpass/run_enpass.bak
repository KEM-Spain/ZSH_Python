#!/usr/bin/zsh
g="\033[m"
BOLD="\033[1m"
ITALIC="\033[3m"
UNDER="\033[4m"
REVERSE="\033[7m"
STRIKE="\033[9m"

BLACK_FG="\033[30m"
="\033[31m"
GREEN_FG="\033[32m"
YELLOW_FG="\033[33m"
BLUE_FG="\033[34m"
MAGENTA_FG="\033[35m"
CYAN_FG="\033[36m"
WHITE_FG="\033[37m"
 
#Constants
ENP_PW=flappy
DELAY=1
LOG=/tmp/${0:t}.log
ENPASS=/opt/enpass/Enpass 
ENP_CRASH_WIN='Enpass Crash Reporter'
_ENPASS_WDW_ID=''

[[ -e ${LOG} ]] && rm -f ${LOG}

logit () {
	local MSG=${@}
	local STAMP=$(date +'%Y-%m-%d:%T')
	echo "${0} ${STAMP} ${MSG}" >> ${LOG}
}

start_enpass () {
	local ENPASS_PID

	send-notification ${DELAY} "Looking for running Enpass instance..."
	ENPASS_PID=($(pgrep -xf ${ENPASS})) #get PID for Enpass

	if [[ -n ${ENPASS_PID} ]];then
		logit "Enpass already running...killing instance"
		sudo killall -I enpass
	fi

	#Start Enpass...
	logit "Starting Enpass..."
	exec ${ENPASS} 2>/dev/null & 

	logit "Waiting for Enpass to start..."
	send-notification ${DELAY} "Waiting for Enpass instance..."

	ENPASS_PID=?
	while [[ ! -e /proc/${PID} ]];do
		ENPASS_PID=($(pgrep -xf ${ENPASS})) #get PID for Enpass
		break
		sleep .2
	done

	logit "Enpass has started..."
}

pass_login_to_enpass () {
	_ENPASS_WDW_ID=$(win_id enpass)
	[[ -z ${_ENPASS_WDW_ID} ]] && logit "ERROR: _ENPASS_WDW_ID not populated" && exit

	logit "Passing credentials to Enpass..."
	send-notification ${DELAY} "Sending credentials to Enpass..."

	/usr/local/bin/system/kbd-toggle off
	/usr/local/bin/system/kbd-flush

	sleep .2
	xdotool windowfocus ${_ENPASS_WDW_ID}
	xdotool type --window ${_ENPASS_WDW_ID} ${ENP_PW}
	sleep .2

	xdotool key --window ${_ENPASS_WDW_ID} Return
	/usr/local/bin/system/kbd-toggle on
	/usr/local/bin/system/kbd-flush
}

close_enpass_window () {
	logit "Closing Enpass window..."

	[[ -z ${_ENPASS_WDW_ID} ]] && logit "ERROR: _ENPASS_WDW_ID not populated" && exit

	xdotool windowclose ${_ENPASS_WDW_ID}
}

#Execution
start_enpass
pass_login_to_enpass
close_enpass_window

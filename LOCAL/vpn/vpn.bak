#!/usr/bin/zsh
REVERSE="\033[7m"
RESET="\033[m"
BOLD="\033[1m"
BLACK_FG="\033[30m"
RED_FG="\033[31m"
GREEN_FG="\033[32m"
YELLOW_FG="\033[33m"
BLUE_FG="\033[34m"
MAGENTA_FG="\033[35m"
CYAN_FG="\033[36m"
WHITE_FG="\033[37m"
STRIKE="\033[9m"
ITALIC="\033[3m"
UNDER="\033[4m"

E_WHITE_FG=$(echo "\033[37m")
E_RESET=$(echo "\033[m")

#Constants
DEFAULT_ARGS='--group P2P'
LIB=/usr/local/lib

#Declaration
typeset -a LIST
typeset -a RAWLIST

#Imports
source ${LIB}/common.zsh

#Functions
list_servers () {
	local SELECTED
	local COUNTRY

	LIST=($(nordvpn countries | sed -re 's/\t+/ /g' -e 's/\x0d\x2d\x0d\x20\x20\x0d//g'))

	if ! arr_is_populated ${LIST};then
		exit_leave "No countries matched:${SEARCHTERM}"
	fi

	list_set_header 'printf "List of %-*d countries providing VPN\tPage:%-*d of %-*d" ${#${#LIST}} ${#LIST} ${#${MAX_PAGES}} ${PAGE} ${#${MAX_PAGES}} ${MAX_PAGES}'
	list_add_header_break

	list_set_prompt "Hit <SPACE> to select server then <ENTER> to connect (or exit if none selected)."
	list_set_action_msgs connect "to country"
	list_set_selection_limit 1
	list_set_client_warn true

	list_cursor_select ${LIST}

	if [[ ${?} -ne 0 ]];then
		SELECTED=$(list_get_selected)
		COUNTRY=$(echo ${LIST[${SELECTED}]} | cut -d: -f2)
		tput clear
		echo "Connecting to ${COUNTRY} ${DEFAULT_ARGS}"
		eval "nordvpn connect ${DEFAULT_ARGS} ${COUNTRY}"
	fi
}

do_disconnect () {
	local SERVER=${@}

	nordvpn disconnect
	sudo iptables -P INPUT ACCEPT
	sudo iptables -F INPUT
	sudo iptables -P OUTPUT ACCEPT
	sudo iptables -F OUTPUT
}

reconnect () {
	local SERVER=${@}

	nordvpn d
	nordvpn c "${SERVER}"
}

format_nord () {
	#local CMD=${1} #nord command to execute
	#local LIST=("${(f)$(nordvpn ${CMD})}")
	local SN=?
	local L
	local VAL
	local LBL
	local LINE

	while read LINE;do
		L=$(echo "${LINE}" | sed -e 's/[	\-]//g') #kill tabs, carriage, and dash
		LBL=$(echo ${L} | cut -d':' -f1)
		VAL=$(echo ${L} | cut -d':' -f2 | sed 's/^ //g')
		if [[ ! ${SN} =~ '\?' ]];then #if set, it's the whitelist, get value
			LBL=${SN}
			VAL=${VAL}
		fi
		if [[ ${L:l} =~ 'subnet' ]];then #hit whitelist label, catch the value on the next cycle
			SN=${LBL}
			continue
		fi
		printf "%20s: ${WHITE_FG}%-s${RESET}\n" ${LBL} ${VAL}
	done
}

#--Begin GetOpts--
RESET="\033[m"
RED_FG="\033[31m"
WHITE_FG="\033[37m"

SCRIPT=${0:t}
function parse_opts {
	local OPTS=${@}
	local -a OPTSTRING
	local O

	for O in {1..${#OPTS}};do
		[[ ${O} -eq 1 && ${OPTS[${O}]} == ":" ]] && continue
		[[ ${O} -gt 1 && ${OPTS[${O}]} == ":" ]] && OPTSTRING+="<PARAM>" && continue
		OPTSTRING+="-${OPTS[${O}]}"
	done
	echo ${OPTSTRING}
}

function usage {
	local OPTS=$(parse_opts ${OPTSTR})
	local -a PENDING_MSGS=(${@})
	echo -e "\n${WHITE_FG}Usage${RESET}: ${SCRIPT} ${WHITE_FG}[${RESET} ${OPTS} ${WHITE_FG}]${RESET} [SERVER]\n"
	echo -e "${WHITE_FG}-H${RESET} help"
	echo -e "${WHITE_FG}-D${RESET} debug"
	echo -e "${WHITE_FG}-L${RESET} login"
	echo -e "${WHITE_FG}-a${RESET} active status"
	echo -e "${WHITE_FG}-c${RESET} connect <country>"
	echo -e "${WHITE_FG}-d${RESET} disconnect"
	echo -e "${WHITE_FG}-l${RESET} list/select <servers>"
	echo -e "${WHITE_FG}-v${RESET} version"
	echo -e "${WHITE_FG}-r${RESET} reset nordvpn"
	echo -e "${WHITE_FG}-s${RESET} settings"
	echo -e "${WHITE_FG}-t${RESET} speedtest"
	echo -e "\n${WHITE_FG}DESC${RESET}:Frontend to nordvpn\n"
	exit_leave ${PENDING_MSGS}
}

OPTSTR=":HDacdlvrstL"
OPTIND=0

CONNECT=false
LIST=false

while getopts ${OPTSTR} OPTION;do
	case ${OPTION} in
		H) usage;;
		D) dbg_set_level;;
		a) exec nordvpn status;;
		c)	CONNECT=true;;
		d) do_disconnect;;
		v) exec nordvpn --version;;
		r) exec nord_reset;;
		s) exec nordvpn settings;;
		t) exec speedtest --single --no-upload;;
		l) list_servers;exit_leave;;
		L) exec nord_login;;
		:) if [[ ${OPTARG} == "l" ]];then #list requested - optional argument
				if [[ ${OPTION} == ":" ]];then #no args
					list_servers 
					exit_leave
				fi
			else
				print -u2 "${SCRIPT}: option: -${OPTARG} requires an argument"; usage
			fi
			;;
		\?) print -u2 "${SCRIPT}: unknown option -${OPTARG}"; usage;;
	esac
done
shift $((OPTIND -1))
#--End GetOpts--

#--Execution

[[ ${CONNECT} == "true" ]] && eval "nordvpn connect ${DEFAULT_ARGS} ${1}" && exit_leave

echo "${CYAN_FG}$(str_unicode_line 21) ${GREEN_FG}VPN Information${RESET} ${CYAN_FG}$(str_unicode_line 21)${RESET}"
nordvpn status | format_nord
echo "${CYAN_FG}$(str_unicode_line 59)${RESET}"
nordvpn settings | format_nord
echo "${CYAN_FG}$(str_unicode_line 59)${RESET}"

nordvpn account
sleep .5
RC=${?}
if [[ ${RC} -ne 0 ]];then
	echo "nordvpn account failed...trying again"
	sleep .5
	nordvpn account
fi

exit_leave

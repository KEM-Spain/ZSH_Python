#!/usr/bin/zsh
# Inline ansi
BOLD="\033[1m"
ITALIC="\033[3m"
RESET="\033[m"
REVERSE="\033[7m"
STRIKE="\033[9m"
UNDER="\033[4m"
BLACK_BG="\033[40m"
BLUE_FG="\033[34m"
CYAN_FG="\033[36m"
GREEN_FG="\033[32m"
MAGENTA_FG="\033[35m"
RED_FG="\033[31m"
WHITE_FG="\033[37m"
YELLOW_FG="\033[33m"
WHITE_ON_GREY="\033[0m\033[0;1;37;100m"

query_rumble () {
	local SEARCHTERM=${1}
	local -A LAST_MSG=($(box_coords_get ${_LAST_MSG_TAG}))
	local -A MSG_BOX=($(box_coords_get "MSG_BOX"))
	local -A FIELD_MAP=("author" 2 "title" 3 "age" 4 "url" 5 "time" 6 "agetime" "4,6")
	local -a AGES=()
	local -a CHANNELS=()
	local -a DURATIONS=()
	local -a LINKS=()
	local -a TITLES=()
	local -a WORK=()
	local -aU VID_LIST=()
	local AGE AUTHOR TITLE URL TIME AGETIME
	local CHANNEL=''
	local DO_GENERAL=false
	local GEN_SEARCH=''
	local LIVE=''
	local MSG=''
	local NDX=''
	local PG=''
	local REL_W=$(( ${LAST_MSG[W]} +4 ))
	local REL_Y=$(coord_center $(( _MAX_COLS + 3 )) ${REL_W})
	local STR=''
	local F X

	[[ ${_DEBUG} -ge ${_LOW_DBG} ]] && dbg "${functrace[1]} called ${0}:${LINENO}: ARGC:${#@}"

	[[ -n ${SEARCHTERM} ]] && g_QUERY_KEY=${SEARCHTERM}

	if [[ ${g_URL_ARG} == 'true' ]];then
		[[ ${_DEBUG} -ge ${_LOW_DBG} ]] && dbg "${0}:${LINENO} QUERY based on URL arg:${URL}"
		PG=("${(f)$(wget -q -O - ${URL})}")
		TITLES=$(pup --charset utf8 'head' 'title' text{} <<<${PG} | sed 's/|//g')
		LINKS="/$(cut -d'/' -f4 <<<${URL})"
		AGES="URL - "
		DURATIONS=$(pup 'div' .media-description-info-stream-time '[title]' text{} <<<${PG} | tr -d '\n' | tr -s '[:space:]' | str_trim)
		[[ -z ${DURATIONS} ]] && DURATIONS="Unavailable"
		g_SEARCH_TYPE="URL"
		g_QUERY_KEY=$(pup 'div' ."media-heading-name" text{} <<<${PG} | tr -d '\n' | tr -s '[:space:]'  | str_trim)
		VID_LIST+="${g_QUERY_KEY}|${TITLES}|${AGES}|${LINKS}|${DURATIONS}" # Unique rows
	else
		PG=$(wget -q -O - "http://rumble.com/c/${g_QUERY_KEY}?page=1")
		[[ ${_DEBUG} -ge ${_LOW_DBG} ]] && dbg "${0}:${LINENO} QUERY based on QUERY_KEY::http://rumble.com/c/${g_QUERY_KEY}?page=1"
	fi

	if [[ ${g_URL_ARG} == 'false' ]];then
		if [[ -n ${PG} ]];then # Channel search
			[[ ${_DEBUG} -ge ${_LOW_DBG} ]] && dbg "${0}:${LINENO} CHANNEL SEARCH"
			[[ ${g_ENGINE_KEY:l} == 'r' ]] && g_LIVE=false
			[[ ${g_ENGINE_KEY:l} == 'rl' ]] && g_LIVE=true
			[[ ${g_LIVE_OPT} == 'true' ]] && { [[ ${g_LIVE} == 'true' ]] && g_LIVE=false || g_LIVE=true }
			[[ ${g_LIVE} == 'true' ]] && MSG="Searching livestreams..." || MSG="Searching videos..."

			if [[ -n ${INNER_BOX} ]];then
				_REL_COORDS=($(box_coords_relative INNER_BOX X +6 Y ${REL_Y} H 3 W ${LAST_MSG[W]}))
				msg_box -T SEARCH -R -c ${MSG}
			else
				msg_box -x $((MSG_BOX[X]+1)) -y ${MSG_BOX[Y]} -w $((MSG_BOX[W]+1)) ${MSG}
			fi

			LIVE=$(pup '.channel-subheader--menu-item attr{href}' <<<${PG} | grep "livestreams" 2>/dev/null)
			[[ ${g_LIVE} == 'true' && -n ${LIVE} ]] && PG=$(wget -q -O - "http://rumble.com${LIVE}")
			[[ ${_DEBUG} -ge ${_LOW_DBG} ]] && dbg "${0}:${LINENO} QUERY based on livestream arg:http://rumble.com${LIVE}"

			if [[ ${PG:l} =~ "no videos found" ]];then
				if [[ -n ${INNER_BOX} ]];then
					_REL_COORDS=($(box_coords_relative INNER_BOX X +6 W ${REL_W} Y ${REL_Y} H 4))
					msg_box -T SEARCH -R -c "<r>Livestream search failed<N> for ${g_QUERY_KEY}|Falling back to defaults..." 
				else
					msg_box -T SEARCH "<r>Livestream search failed<N> for ${g_QUERY_KEY}|Falling back to defaults..." 
				fi
				PG=$(wget -q -O - "http://rumble.com/c/${g_QUERY_KEY}?page=1")
				[[ ${_DEBUG} -ge ${_LOW_DBG} ]] && dbg "${0}:${LINENO} QUERY fallback on QUERY_KEY::http://rumble.com/c/${g_QUERY_KEY}?page=1"
			fi

			g_SEARCH_TYPE=channel
			TITLES=("${(f)$(pup --charset utf8 '.title__link text{}' <<<${PG} | tut blank_lines | iconv -f utf-8 -t ascii//TRANSLIT | sed 's/|//g')}")
			AGES=("${(f)$(pup --charset utf8 '.videostream__data text{}' <<<${PG} | tut blank_lines | tr '[\012|\015]' '[ ]' | sed -e 's/\(comments\?\) /\1 \n/g')}") # Either plural or singular
			LINKS=("${(f)$(pup --charset utf8 'a.videostream__link attr{href}' <<<${PG})}")
			DURATIONS=("${(f)$(pup --charset utf8 '.videostream__badge text{}' <<<${PG} | tut blank_lines)}")

			for ((X=1; X<=${#TITLES}; X++));do
				AGE=$(sed 's/ago .*/ago/' <<<${AGES[${X}]})
				[[ -z ${AGE} ]] && continue
				[[ ! ${AGE} =~ 'ago' ]] && continue # Dump junk listings without age
				[[ ${AGE} =~ 'views' ]] && continue # Dump junk listings without age
				VID_LIST+="${g_QUERY_KEY}|${TITLES[${X}]}|${AGE}|${LINKS[${X}]}|${DURATIONS[${X}]}" # Unique rows
			done
		else # User search
			[[ ${_DEBUG} -ge ${_LOW_DBG} ]] && dbg "${0}:${LINENO} GENERAL SEARCH"
			msg_box -c "Channel search failed.  Performing user livestream search..."
			g_SEARCH_TYPE=user
			GEN_SEARCH=$(sed 's/ /%20/g' <<<${g_QUERY_KEY})
			PG=$(wget -q -O - "https://rumble.com/user/${g_QUERY_KEY}/livestreams'")
			[[ ${_DEBUG} -ge ${_LOW_DBG} ]] && dbg "${0}:${LINENO} QUERY based on user livestream search:https://rumble.com/user/${g_QUERY_KEY}/livestreams"

			[[ -z ${PG} || ${PG:l} =~ "no videos found" ]] && DO_GENERAL=true || DO_GENERAL=false

			if [[ ${DO_GENERAL} == 'false' ]];then
				TITLES=("${(f)$(pup --charset utf8 '.title__link text{}' <<<${PG} | tut blank_lines | iconv -f utf-8 -t ascii//TRANSLIT | sed 's/|//g')}")
				AGES=("${(f)$(pup --charset utf8 '.videostream__data text{}' <<<${PG} | tut blank_lines | tr '[\012|\015]' '[ ]' | sed -e 's/\(comments\?\) /\1 \n/g')}") # Either plural or singular
				LINKS=("${(f)$(pup --charset utf8 'a.videostream__link attr{href}' <<<${PG})}")
				DURATIONS=("${(f)$(pup --charset utf8 '.videostream__badge text{}' <<<${PG} | tut blank_lines)}")

				for ((X=1; X<=${#TITLES}; X++));do
					AGE=$(sed 's/ago .*/ago/' <<<${AGES[${X}]})
					[[ -z ${AGE} ]] && continue
					[[ ! ${AGE} =~ 'ago' ]] && continue # Dump junk listings without age
					[[ ${AGE} =~ 'views' ]] && continue # Dump junk listings without age
					VID_LIST+="${g_QUERY_KEY}|${TITLES[${X}]}|${AGE}|${LINKS[${X}]}|${DURATIONS[${X}]}" # Unique rows
				done
			else # General search
				[[ ${_DEBUG} -ge ${_LOW_DBG} ]] && dbg "${0}:${LINENO} GENERAL SEARCH"
				msg_box -c "Other searches failed.  Performing general search..."
				g_SEARCH_TYPE=general
				GEN_SEARCH=$(sed 's/ /%20/g' <<<${g_QUERY_KEY})
				PG=$(wget -q -O - "https://rumble.com/search/all?q=${GEN_SEARCH}")
				[[ ${_DEBUG} -ge ${_LOW_DBG} ]] && dbg "${0}:${LINENO} QUERY based on general search:https://rumble.com/search/all?q=${GEN_SEARCH}"

				TITLES=("${(f)$(pup --charset utf8 '.video-item--title text{}' <<<${PG} | iconv -f utf-8 -t ascii//TRANSLIT | sed 's/|//g')}")
				AGES=("${(f)$(pup --charset utf8 '.video-item--meta attr{datetime}' <<<${PG})}")
				DURATIONS=("${(f)$(pup --charset utf8 '.video-item--duration attr{data-value}' <<<${PG})}")
				LINKS=("${(f)$(pup --charset utf8 '.video-item--a attr{href}' <<<${PG})}")
				CHANNELS=("${(f)$(pup --charset utf8 '.video-item--by-a attr{href}' <<<${PG})}")

				for ((X=1; X<=${#TITLES}; X++));do
					[[ ${CHANNELS[${X}]} =~ 'user' ]] && echo "Query:${g_QUERY_KEY} Skipped ${TITLES[${X}]} ${CHANNELS[${X}]}" >> /tmp/gen_filter.dbg && continue # Filter
					AGE=$(sed 's/T.*//' <<<${AGES[${X}]})
					CHANNEL=$(sed 's#^.*/##' <<<${CHANNELS[${X}]})
					VID_LIST+="${CHANNEL}|${TITLES[${X}]}|${AGE}|${LINKS[${X}]}|${DURATIONS[${X}]}" # Unique rows
				done
			fi
		fi
	fi
	 
	NDX=0
	for X in ${VID_LIST};do
		((NDX++))
		VID_LIST[${NDX}]="${NDX}|${X}"
	done

	if [[ ${g_SEARCH_TYPE} == 'general' ]];then
		_LOCAL_LIST=("${(f)$(for L in ${VID_LIST};do echo ${L};done | sort -t'|' -k4.1,4.10 -r)}")
	else
		_LOCAL_LIST=(${VID_LIST})
	fi

	[[ ${_DEBUG} -ge ${_LOW_DBG} ]] && dbg "${0}:${LINENO} g_QUERY_KEY:${g_QUERY_KEY} _LOCAL_LIST count: ${#_LOCAL_LIST}, TITLES: ${#TITLES}"
	[[ ${_DEBUG} -ge ${_LOW_DBG} ]] && dbg "${0}:${LINENO} \n$(for L in ${VID_LIST};do echo "VID_LIST:${L}";done)"

	# Return failed search status
	if ! arr_is_populated "${_LOCAL_LIST}";then
		return 1
	fi

	for F in ${_LOCAL_LIST};do
		AGE=$(cut -d'|' -f${FIELD_MAP[age]} <<<${F})
		AUTHOR=$(cut -d'|' -f${FIELD_MAP[author]} <<<${F})
		TITLE=$(cut -d'|' -f${FIELD_MAP[title]} <<<${F}); TITLE=$(clean_title "text" ${TITLE})
		URL=$(cut -d'|' -f${FIELD_MAP[url]} <<<${F}); URL="http://rumble.com${URL}"
		TIME=$(cut -d'|' -f${FIELD_MAP[time]} <<<${F})
		AGETIME=$(cut -d'|' -f${FIELD_MAP[agetime]} <<<${F});	AGETIME="(${AGETIME:s/|/ /})"

		WORK+="${AGE}|${AUTHOR}|${TITLE}|${URL}|${TIME}|${AGETIME}"
	done

	_LOCAL_LIST=(${WORK})

	return 0
}

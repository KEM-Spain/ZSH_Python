#!/usr/bin/zsh
# Inline ansi
BOLD="\033[1m"
ITALIC="\033[3m"
RESET="\033[m"
REVERSE="\033[7m"
STRIKE="\033[9m"
UNDER="\033[4m"
BLACK_BG="\033[40m"
BLUE_FG="\033[34m"
CYAN_FG="\033[36m"
GREEN_FG="\033[32m"
MAGENTA_FG="\033[35m"
RED_FG="\033[31m"
WHITE_FG="\033[37m"
YELLOW_FG="\033[33m"
CSR_OFF="\033[?25l"
CSR_ON="\033[?25h"
WHITE_ON_GREY="\033[0m\033[0;1;37;100m"

# TODO: Add unused vars
# Imports
[[ -z ${ZSH_LIB_DIR} ]] && _LIB_DIR=/usr/local/lib || _LIB_DIR=${ZSH_LIB_DIR}
source ${_LIB_DIR}/LIB_INIT.zsh # Must be first
source ${_LIB_DIR}/UTILS.zsh
source ${_LIB_DIR}/LIB_DEPS.zsh # Must be last

# Declarations
typeset -a COLORS=(BOLD ITALIC RESET REVERSE STRIKE UNDER BLACK BLUE CYAN GREEN MAGENTA RED WHITE YELLOW CSR WHITE_ON_GREY)
typeset -aU ALL_VARS=()
typeset -aU DECL_VARS=()
typeset -aU REFD_VARS=()
typeset -aU ASGN_VARS=()

# Functions
custom_sort () {
	local CHAR=${1[1,1]}

	case ${CHAR} in
		_) echo 0;;
		g) echo 1;;
		*) echo 2;;
	esac
}

filter_color () {
	local ARG=${1}

	ARG=$(sed -E "s/(^E_|_FG$|_BG$)//g" <<<${ARG})

	[[ ${COLORS[(i)${ARG}]} -le ${#COLORS} ]] && return 0 || return 1
}

# Execute
clear

[[ -z ${1} ]] && echo "${_SCRIPT_TAG} ${RED_FG}Missing argument${RESET}:<ZSH_SCRIPT>" && exit
TARGET_SCRIPT=${1}

ASGN_VARS=("${(f)$(grep --color=never -o -P '(^| )\w+=' ${TARGET_SCRIPT} | sed -e 's/[[:space:]]*//' -e 's/=$//' | sort -u)}")
DECL_VARS=("${(f)$(sed 's/[[:space:]]*//' ${TARGET_SCRIPT} | grep --color=never -P '^(typeset|local)' | sed -E -e 's/(typeset|local) //' -e 's/^[-]\w+ //' -e 's/=.*//')}")
DECL_VARS=(${=DECL_VARS}) # Verticalize any linear declarations
ALL_VARS=("${(f)$(grep --color=never -o -P '\${?\w+' ${TARGET_SCRIPT} | sed 's/[\${]//g')}")
for V in ${ALL_VARS};do
	[[ ${DECL_VARS[(i)${V}]} -gt ${#DECL_VARS} ]] && REFD_VARS+=${V}
done

(
HDR="Declared, Assigned, and Referenced vars for app"
echo "${CYAN_FG}${HDR}${RESET}:${WHITE_ON_GREY}${TARGET_SCRIPT}${RESET}"
echo $(str_unicode_line ${#HDR})

HDR="Declared Variables"
echo "\n${WHITE_ON_GREY}${HDR}${RESET}"
echo $(str_unicode_line ${#HDR})
for L in ${(o)DECL_VARS};do
	if filter_color ${L};then
		continue
	fi
	printf "%d %s\n" $(custom_sort ${L}) ${L}
done | sort -n | sed 's/[0-9] //'

HDR="Assigned Variables"
echo "\n${WHITE_ON_GREY}${HDR}${RESET}"
echo $(str_unicode_line ${#HDR})
for L in ${(o)ASGN_VARS};do
	if filter_color ${L};then
		continue
	fi
	printf "%d %s\n" $(custom_sort ${L}) ${L}
done | sort -n | sed 's/[0-9] //'

HDR="Referenced Variables"
echo "\n${WHITE_ON_GREY}${HDR}${RESET}"
echo $(str_unicode_line ${#HDR})
for L in ${(o)REFD_VARS};do
	if filter_color ${L};then
		continue
	fi
	[[ ${ASGN_VARS[(i)${L}]} -le ${#ASGN_VARS} ]] && continue
	printf "%d %s\n" $(custom_sort ${L}) ${L}
done | sort -n | sed 's/[0-9] //'
) | mypager

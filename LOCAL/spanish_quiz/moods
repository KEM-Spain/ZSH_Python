#!/usr/bin/zsh
#vim: syntax off
BOLD="\033[1m"
RESET="\033[m"
BOLD="\033[1m"
ITALIC="\033[3m"
UNDER="\033[4m"
REVERSE="\033[7m"
STRIKE="\033[9m"
RED_FG="\033[31m"
GREEN_FG="\033[32m"
YELLOW_FG="\033[33m"
BLUE_FG="\033[34m"
MAGENTA_FG="\033[35m"
CYAN_FG="\033[36m"
WHITE_FG="\033[37m"

#Declarations

#Constants
LIB=/usr/local/lib

#Globals
DELIM=' '

#Imports
_LIB_DIR=/usr/local/lib
source ${_LIB_DIR}/LIB_INIT.zsh
source ${_LIB_DIR}/UTILS.zsh

for D in ${=_DEPS_};do
	if [[ -e ${_LIB_DIR}/${D} ]];then
		source ${_LIB_DIR}/${D}
	else
		echo "Cannot source:${_LIB_DIR}/${D} - not found"
		exit 1
	fi
done

#Functions

#--Begin GetOpts--
RESET="\033[m"
RED_FG="\033[31m"
WHITE_FG="\033[37m"

SCRIPT=${0:t}

read -r -d '' DESC<<EOF
Display all conjugations for a given verb
\tIf a delimiter is passed, output will be suitable for parsing
EOF

parse_opts () {
	local OPTS=${@}
	local -a OPTSTRING
	local LETTER_OPT
	local O

	for O in {1..${#OPTS}};do
		[[ ${OPTS[${O}]} =~ '[a-z]' ]] && LETTER_OPT=${OPTS[${O}]}
		[[ ${O} -eq 1 && ${OPTS[${O}]} == ":" ]] && continue
		[[ ${O} -gt 1 && ${OPTS[${O}]} == ":" ]] && OPTSTRING+=$(opt_type ${LETTER_OPT}) && continue
		OPTSTRING+="-${OPTS[${O}]}"
	done
	echo ${OPTSTRING}
}

opt_exists () {
	local OPT=${1}
	[[ $(( $OPTIONS[(Ie)${OPT}] )) -ne 0 ]] && return 0 || return 1
}

opt_type () {
	local OPT=${1}
	case ${OPT} in
		d) echo "<DIR>";;
		f) echo "<FILE>";;
		s) echo "<DELIMITER>";;
		t) echo "<FILE_TYPE>";;
	esac
}

usage () {
	tabs 5

	local OPTS=$(parse_opts ${OPTSTR})
	local -a PENDING_MSGS=(${@})

	echo -e "\n${WHITE_FG}Usage${RESET}: ${SCRIPT} ${WHITE_FG}[${RESET}${OPTS}${WHITE_FG}]${RESET}\n"
	echo -e "${WHITE_FG}-H${RESET} help"
	echo -e "${WHITE_FG}-D${RESET} debug"
	echo -e "${WHITE_FG}-s $(opt_type s)${RESET} output delimeter"
	echo -e "\n${WHITE_FG}DESC${RESET}:${DESC}"
	
	exit_leave "\n${PENDING_MSGS}\n"
}

typeset -a OPTIONS
OPTSTR=":HDs:"
OPTIND=0
QUIET=false

while getopts ${OPTSTR} OPTION;do
	case $OPTION in
     H) usage;;
     D) dbg_set_level;;
     s) DELIM=${OPTARG};QUIET=true;;
     :) print -u2 "${RED_FG}${SCRIPT}${RESET}: option: -${OPTARG} requires an argument"; usage;;
    \?) print -u2 "${RED_FG}${SCRIPT}${RESET}: unknown option -${OPTARG}"; usage;;
	esac
	[[ ${OPTION} != 'D' ]] && OPTIONS+=${OPTION}
done
shift $((OPTIND -1))
#--End GetOpts--

#Execution
[[ ${#} -eq 0 ]] && usage

[[ ${QUIET} == 'false' ]] && echo "${WHITE_FG}Moods with example${RESET}"
[[ ${QUIET} == 'false' ]] && echo "\n${WHITE_FG}Indicative...${RESET}" || echo "#indicative"
do_query -s"${DELIM}" "SELECT distinct verb,tense,p1 from spanish_tense where verb = '$1' and mood='indicative' order by tense;"
[[ ${QUIET} == 'false' ]] && echo "\n${WHITE_FG}Subjunctive...${RESET}" || echo "#subjunctive"
do_query -s"${DELIM}" "SELECT distinct verb,tense,p1 from spanish_tense where verb = '$1' and mood='subjunctive' order by tense;"
[[ ${QUIET} == 'false' ]] && echo "\n${WHITE_FG}Imperative...${RESET}" || echo "#imperative"
do_query -s"${DELIM}" "SELECT distinct verb,tense,p2 from spanish_tense where verb = '$1' and mood='imperative' order by tense;"

exit_leave

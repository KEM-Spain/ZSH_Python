#!/usr/bin/zsh

# Imports
[[ -z ${ZSH_LIB_DIR} ]] && _LIB_DIR=/usr/local/lib || _LIB_DIR=${ZSH_LIB_DIR}
source ${_LIB_DIR}/LIB_INIT.zsh # Must be first
source ${_LIB_DIR}/UTILS.zsh
source ${_LIB_DIR}/LIB_DEPS.zsh # Must be last

#Vars
_ENP_MARKER=/tmp/enpass.init
_ENP_PW=''
_ENP_CONFIG="/home/kmiller/.enp"
_ENPASS_INFO=''
_ENPASS_WDW_ID=''
_ENPASS_WDW_TITLE=''
_TERM_ID=$(win_id terminal | cut -d'|' -f2) # Get decimal ID for xdotool

#Get PW
read _ENP_PW < ${_ENP_CONFIG}
_DELAY=1
_LOG=/tmp/${0:t}.log
_ENPASS=/opt/enpass/Enpass 

start_enpass () {
	local ARG=${1}
	local _ENPASS_PID

	send-notification ${_DELAY} "Looking for running Enpass instance..."
	_ENPASS_PID=($(pgrep -xf ${_ENPASS})) #get PID for Enpass

	if [[ -n ${_ENPASS_PID} ]];then
		logit "Enpass already running...killing instance"
		sudo killall -I enpass
	fi

	#Start Enpass...
	logit "Starting Enpass..."
	if [[ ${ARG} == 'foreground' ]];then
		echo "Control-C to exit..." >&2
		${_ENPASS} 2>/dev/null
	else
		exec ${_ENPASS} 2>/dev/null & 
	fi

	logit "Waiting for Enpass to start..."
	send-notification ${_DELAY} "Waiting for Enpass instance..."

	_ENPASS_PID=?
	while [[ ! -e /proc/${PID} ]];do
		_ENPASS_PID=($(pgrep -xf ${_ENPASS})) #get PID for Enpass
		break
		sleep .2
	done

	logit "Enpass has started..."
}

pass_login_to_enpass () {
	_ENPASS_INFO=$(win_id enpass) # Get decimal ID for xdotool
	[[ -z ${_ENPASS_INFO} ]] && logit "ERROR: _ENPASS_INFO not populated" && exit

	_ENPASS_WDW_ID=$(cut -d'|' -f2 <<<${_ENPASS_INFO})
	_ENPASS_WDW_TITLE=$(cut -d'|' -f3 <<<${_ENPASS_INFO})

	logit "Received ID:${_ENPASS_WDW_ID}"
	logit "Received Title:${_ENPASS_WDW_TITLE}"

	if [[ ${_ENPASS_WDW_TITLE:l} =~ 'crash' ]];then
		logit "Detected Enpass Crash Window"
		logit "Sending Escape Key"
		xdotool windowfocus ${_ENPASS_WDW_ID}
		xdotool key --window ${_ENPASS_WDW_ID} Escape
		sleep 2
		logit "Getting new window ID"
		_ENPASS_WDW_ID=$(win_id enpass | cut -d'|' -f2) # Get decimal ID for xdotool
		logit "New window ID:${_ENPASS_WDW_ID}"
	fi

	logit "Passing credentials to Enpass..."
	send-notification ${_DELAY} "Sending credentials to Enpass..."

	xdotool windowfocus ${_TERM_ID}
	/usr/local/bin/system/kbd-toggle off
	/usr/local/bin/system/kbd-flush

	sleep .2

	xdotool windowfocus ${_ENPASS_WDW_ID}
	xdotool type --window ${_ENPASS_WDW_ID} ${_ENP_PW}
	sleep .5
	xdotool key --window ${_ENPASS_WDW_ID} Return

	/usr/local/bin/system/kbd-toggle on
	/usr/local/bin/system/kbd-flush
	xdotool windowfocus ${_TERM_ID}
}

close_enpass_window () {
	logit "Closing Enpass window..."

	[[ -z ${_ENPASS_WDW_ID} ]] && logit "ERROR: _ENPASS_WDW_ID not populated" && exit

	xdotool windowclose ${_ENPASS_WDW_ID}
}

#Execution
/bin/rm -f ${_ENP_MARKER}

if [[ ${1} == "-H" ]];then
	echo "Usage: ${0:t} [foreground]" && exit
elif [[ ${1} == "foreground" ]];then
	start_enpass foreground
else
	start_enpass
fi

pass_login_to_enpass
close_enpass_window

touch ${_ENP_MARKER}
exit_leave

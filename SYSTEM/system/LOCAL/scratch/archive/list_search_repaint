list_search_repaint () {
	local ROWS=${1}
	local PAGE=${2}
	local -A MSG_COORDS=($(box_coords_get MSG_BOX ))
	local -A PG_LIMITS=($(list_get_page_limits))
	local CURSOR=0
	local DISPLAY_ROWS=0
	local END_COL=0
	local END_ROW=0
	local LINE_SNIP=''
	local SAVED_NDX=${_LIST_NDX}
	local START_COL=0
	local START_ROW=0
	local R

	# TODO: list_search_repaint not in sync
	[[ ${_DEBUG} -ge ${_LIST_LIB_DBG} ]] && dbg "${functrace[1]} called ${0}:${LINENO}: ARGC:${#@}"
	[[ ${_DEBUG} -ge ${_LIST_LIB_DBG} ]] && dbg "${0}: STORED SAVED_NDX:${SAVED_NDX}"

	if [[ -z ${MSG_COORDS} ]];then
		[[ ${_DEBUG} -ge ${_LIST_LIB_DBG} ]] && dbg "${0}: MSG_COORDS is null: returning"
		return
	fi

	_MARKER=${_LINE_MARKER}

	START_COL=${MSG_COORDS[Y]}
	START_ROW=${MSG_COORDS[X]}

	END_COL=$(( START_COL + ${MSG_COORDS[W]} ))

	DISPLAY_ROWS=$(( PG_LIMITS[BOT] - PG_LIMITS[TOP] + 1 ))
	CURSOR=$(( START_ROW - 1 ))

	[[ ${_DEBUG} -ge ${_LIST_LIB_DBG} ]] && dbg "${0}: START_COL:${START_COL} START_ROW:${START_ROW} END_COL:${END_COL} DISPLAY_ROWS:${DISPLAY_ROWS} CURSOR:${CURSOR}"
	
	START_ROW=$(( PG_LIMITS[TOP] + START_ROW - 1 ))
	END_ROW=$(( START_ROW + ROWS ))

	[[ ${_DEBUG} -ge ${_LIST_LIB_DBG} ]] && dbg "${0}: START_ROW:${START_ROW} END_ROW:${END_ROW} _LIST_NDX:${_LIST_NDX}"

	_LIST_NDX=$(( START_ROW - 1 ))

	for (( R=START_ROW; R <= END_ROW; R++ ));do
		if [[ ${_BARLINES} == 'true' ]];then
			BARLINE=$(( _LIST_NDX % 2 )) # Barlining 
			[[ ${BARLINE} -ne 0 ]] && BAR=${BLACK_BG} || BAR="" # Barlining
		fi
		if [[ ${_LIST_NDX} -le ${#_LIST} ]];then
			tcup ${CURSOR} 0
			eval ${_LIST_LINE_ITEM} # Line item printf
		fi
		((CURSOR++))
		((_LIST_NDX++))
	done

	[[ ${_DEBUG} -ge ${_LIST_LIB_DBG} ]] && dbg "${0}: RESTORING _LIST_NDX:${SAVED_NDX}"

	_LIST_NDX=${SAVED_NDX} # Restore NDX
}

#!/usr/bin/zsh
#vim: syntax off
BOLD="\033[1m"
ITALIC="\033[3m"
RESET="\033[m"
REVERSE="\033[7m"
STRIKE="\033[9m"
UNDER="\033[4m"

BLUE_FG="\033[34m"
CYAN_FG="\033[36m"
GREEN_FG="\033[32m"
MAGENTA_FG="\033[35m"
RED_FG="\033[31m"
WHITE_FG="\033[37m"
YELLOW_FG="\033[33m"

#Constants
LIB=/usr/local/lib
DATE_STAMP=$(date +"%m-%d-%y")

#Imports
_LIB_DIR=/usr/local/lib
source ${_LIB_DIR}/LIB_INIT.zsh
source ${_LIB_DIR}/UTILS.zsh

for D in ${=_DEPS_};do
	if [[ -e ${_LIB_DIR}/${D} ]];then
		source ${_LIB_DIR}/${D}
	else
		echo "Cannot source:${_LIB_DIR}/${D} - not found"
		exit 1
	fi
done

span () {
	local FN=${1}
	local PERL_SCRIPT

	read -r -d '' PERL_SCRIPT <<'___EOF'
	use warnings;
	use strict;
	use diagnostics;
	#use 5.010;

	my ($filename) = @ARGV;
	my $line;
	my $nextline;
	my $FN;
	my %TRANS=("=C3=A1"=>"á", "=C3=A9"=>"é", "=C3=AD"=>"í", "=C3=B1"=>"ñ", "=C3=B3"=>"ó", "=C3=BA"=>"ú", "=C3=BC"=>"ü");

	if (not defined $filename) {
		die "Need the name of the google mailbox data\n";
	}

	open ($FN, $filename) or die "Could not open file '$filename' $!";

	while ($line = <$FN>) {
		if ($line =~ /box-h1 blue/) {
			$nextline = <$FN>;
			$nextline =~ s/(=C3=A1|=C3=A9|=C3=AD|=C3=B1|=C3=B3|=C3=BA)/$TRANS{$1}/g;
			chomp ${nextline};
			print "$nextline|";
		}
		if ($line =~ /3D\"wotd-quick-translation/) {
			$nextline = <$FN>;
			print "$nextline";
		}
	}

	close($FN);
___EOF

perl -e "$PERL_SCRIPT" ${FN}
}

#Execution
do_smcup

TAKEOUT_DIR=("${(f)$(find . -type d -name 'takeout*')}")
if [[ -n ${TAKEOUT_DIR} && ${#TAKEOUT_DIR} -eq 1 ]];then
	MBOX=("${(f)$(find ${TAKEOUT_DIR} -type f -name 'Spanish.mbox')}")
	if [[ -n ${MBOX} ]];then
		msg_box "Found mailbox: ${MBOX}"
	else
		exit_leave "No mailbox data found"
	fi
else
	if [[ ${#TAKEOUT_DIR} -gt 1 ]];then
		exit_leave "Multiple takeout dirs found. Only one takeout dir allowed.  Remove all but one takeout dir."
	else
		exit_leave "No takeout dir found"
	fi
fi

OVERWRITE=true
if [[ -e MBOX.clean ]];then
	msg_box -p -PW "MBOX.clean exists"
	[[ ${_MSG_KEY} == 'y' ]] && OVERWRITE=true || OVERWRITE=false
fi

echo "\nPatching Spanish.mbox..."

[[ ${OVERWRITE} == 'true' ]] && tr -d '\r' < ${MBOX} | perl -0777 -pe 's/=\n//g; s/\">/\">\n/g; s/<\/a/\n<\/a/g'  >MBOX.clean

echo "Spanish.mbox patched." >&2
echo "Getting Spanish words and translations..." >&2
span MBOX.clean | sed 's/ |/|/g' | sort -u > ${DATE_STAMP}_vocab.dat

if [[ -s ${DATE_STAMP}_vocab.dat ]];then
	exit_leave "${GREEN_FG}${DATE_STAMP}_vocab.dat created...${RESET}"
else
	exit_leave "${RED_FG}Problem creating${RESET}: ${DATE_STAMP}_vocab.dat created..."
fi

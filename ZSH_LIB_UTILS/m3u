#!/usr/bin/zsh

# Declarations
typeset -a LIST
typeset -a PLAYLIST
typeset -Z 3 NDX 

# Imports
_LIB_DIR=/usr/local/lib
source ${_LIB_DIR}/LIB_INIT.zsh
source ${_LIB_DIR}/ARRAY.zsh
source ${_LIB_DIR}/TPUT.zsh
source ${_LIB_DIR}/LIB_DEPS.zsh

#--Begin GetOpts--
RESET="\033[m"
RED_FG="\033[31m"
WHITE_FG="\033[37m"

SCRIPT=${0:t}
parse_opts () {
	local OPTS=${@}
	local -a OPTSTR
	local LETTER_OPT
	local O

	for O in {1..${#OPTS}};do
		[[ ${OPTS[${O}]} =~ '[a-z]' ]] && LETTER_OPT=${OPTS[${O}]}
		[[ ${O} -eq 1 && ${OPTS[${O}]} == ":" ]] && continue
		[[ ${O} -gt 1 && ${OPTS[${O}]} == ":" ]] && OPTSTR+=$(opt_type ${LETTER_OPT}) && continue
		OPTSTR+="-${OPTS[${O}]}"
	done
	echo ${OPTSTR}
}

opt_type () {
	local OPT=${1}
	case ${OPT} in
		d) echo "<DIR>";;
		f) echo "<FILE>";;
	esac
}

usage () {
	local OPTS=$(parse_opts ${OPTSTR})

	tabs 5
	[[ ${_SMCUP} == 'true' ]] && do_rmcup

	(
	echo -e "\n${WHITE_FG}Usage${RESET}: ${SCRIPT} ${WHITE_FG}[${RESET}${OPTS}${WHITE_FG}]${RESET}\n"
   echo -e "${WHITE_FG}-H${RESET} help"
	echo -e "${WHITE_FG}-D${RESET} debug"
	echo -e "${WHITE_FG}-d $(opt_type d)${RESET} directory to locate files. Default search begins in $(realpath ~)"
	echo -e "${WHITE_FG}-f $(opt_type f)${RESET} file containing file names of playlist tracks"
	echo -e "\n${WHITE_FG}Desc${RESET}:Create m3u playlist from a list of file names either in a file or from STDIN"
	) >&2

	exit_leave
}

OPTSTR=":HDd:f:"

DEBUG=false
OPTIND=0
FN=''
DIR=''

while getopts ${OPTSTR} OPTION;do
	case $OPTION in
     H) usage;;
     D) DEBUG=true;;
     f) FN=${OPTARG};;
     d) DIR=${OPTARG};;
     :) print -u2 "${SCRIPT}: option: -${OPTARG} requires an argument"; usage;;
    \?) print -u2 "${SCRIPT}: ${BOLD}${RED_FG}Unknown option${RESET} -${OPTARG}"; usage;;
	esac
done
shift $((OPTIND -1))
#--End GetOpts--

#--Execution--
# Read file names from file/or stdin and generate playlist
[[ -n ${FN} ]] && echo "Reading file names from:${FN}">&2
[[ -n ${DIR} ]] && echo "Using DIR:${DIR} to locate files">&2

if [[ ! -t 0 ]];then
	while read LINE;do
		LIST+="${LINE}"
	done
else
	[[ -z ${FN} ]] && echo "${WHITE_FG}NOTICE${RESET}:${0:t} requires a file name containing track names">&2 && usage
	while read LINE;do
		LIST+="${LINE}"
	done < ${FN}
fi

if ! arr_is_populated "${LIST}";then
	echo "${0:t} No file names found">&2
	usage
fi

for L in ${LIST};do
	if [[ $(file ${L}) =~ '(media|audio)' ]];then # Supplied name is fully qualified and valid
		PLAYLIST+=${L}
	else
		FQFN=$(find ${DIR:=~} -name "${L:t}" 2>/dev/null) # Supplied name needs qualification
		[[ -z ${FQFN} ]] && echo "Unable to locate audio file:${L} - omitted from playlist">&2 && read && continue
		PLAYLIST+=${FQFN}
	fi
done

[[ -z ${PLAYLIST} ]] && echo "${0:t} No fully qualified file names found. Playlist could not be generated.">&2 && usage

echo "#EXTM3U"
NDX=0
for P in ${PLAYLIST};do
	((NDX++))
	echo "#EXTINF:${NDX},${P:t}"
	echo ${P} 
done

exit_leave

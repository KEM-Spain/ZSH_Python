#!/usr/bin/zsh
# Inline ansi
BOLD="\033[1m"
ITALIC="\033[3m"
RESET="\033[m"
REVERSE="\033[7m"
STRIKE="\033[9m"
UNDER="\033[4m"

BLACK_BG="\033[40m"

BLUE_FG="\033[34m"
CYAN_FG="\033[36m"
GREEN_FG="\033[32m"
MAGENTA_FG="\033[35m"
RED_FG="\033[31m"
WHITE_FG="\033[37m"
YELLOW_FG="\033[33m"

# Constants
_REPO=~/Code/REPO
_USER_DIR=${_REPO}/USER_DIR
_ETC_SUPPORT=${_REPO}/ETC_SUPPORT
_PYTHON=${_REPO}/PYTHON
_SYSTEM=${_REPO}/SYSTEM
_DEV=${_REPO}/LOCAL
_VIM_CFG=${_REPO}/VIM_CFG
_VIM_CFG_USER=${_REPO}/VIM_CFG/USER
_ZSH_CFG=${_REPO}/ZSH_CFG
_ZSH_CFG_USER=${_REPO}/ZSH_CFG/USER
_ZSH_LIB=${_REPO}/ZSH_LIB
_ZSH_LIB_UTILS=${_REPO}/ZSH_LIB_UTILS
_ZSH_NON_LIB_UTILS=${_REPO}/ZSH_NON_LIB_UTILS

_DEV_DIR=/home/kmiller/Code/LOCAL
_PYTHON_DIR=/home/kmiller/Code/LANG/Python/PROJECTS
_UL_BIN_DIR=/usr/local/bin
_UL_BIN_SYS_DIR=/usr/local/bin/system
_UL_BIN_CONV_DIR=/usr/local/bin/conversion
_UL_ETC_DIR=/usr/local/etc
_UL_LIB_DIR=/usr/local/lib
_VIM_DIR=/home/kmiller/.vim
_ZSH_DIR=/home/kmiller/.zsh
_ZSH_CFG_DIR=/etc/zsh

# Declarations
typeset -a _DEVELOPMENT
typeset -a _UL_BIN_ZSH_FILES
typeset -a _UL_LIB_ZSH_FILES
typeset -a _UL_ETC_FILES
typeset -a _ZSH_CFG_FILES
typeset -a _PYTHON_FILES
typeset -a _USER_FILES

# Functions
copy_dev_files () {
	typeset -A DEV_LIST

	/bin/rm -rf ${_DEV}/* >/dev/null 2>&1

	echo "${WHITE_FG}DEVELOPMENT${RESET}" >&2
	BIN_LIST=("${(f)$(find /usr/local/bin -type f ! -path /usr/local/bin)}")
	LIST=("${(f)$(find ~/Code/LOCAL -maxdepth 1 -type d)}")

	for L in ${LIST};do
		DEV_LIST[${L:t}]=1
	done

	for D in ${BIN_LIST};do
		[[ ${DEV_LIST[${D:t}]} -eq 1 ]] && cp -r ${_DEV_DIR}/${D:t} ${_DEV}
	done

	cp -r ${_DEV_DIR}/LIBS/scratch ${_DEV}
	cp -r ${_DEV_DIR}/spanish_quiz ${_DEV}
	cp -r ${_DEV_DIR}/takeout ${_DEV}
	cp -r ${_DEV_DIR}/manage_db ${_DEV}
}

copy_zsh_lib_utils () {
	echo "${WHITE_FG}ZSH LIB UTILS${RESET}" >&2
	for L in ${_UL_BIN_ZSH_FILES};do
		grep -q LIB_INIT ${L}
		[[ ${?} -eq 0 ]] && cp "${L}" ${_ZSH_LIB_UTILS}
	done
}

copy_non_lib_utils () {
	echo "${WHITE_FG}ZSH NON LIB UTILS${RESET}" >&2
	for L in ${_UL_BIN_ZSH_FILES};do
		grep -q LIB_INIT ${L}
		[[ ${?} -ne 0 ]] && cp "${L}" ${_ZSH_NON_LIB_UTILS}
	done
}

copy_zsh_libs () {
	echo "${WHITE_FG}ZSH LIBS${RESET}" >&2
	LIBS=("${(f)$(find ${_UL_LIB_DIR} -maxdepth 1 -type f)}")
	for L in ${LIBS};do
		cp "${L}" ${_ZSH_LIB}
	done
}

copy_sys_files () {
	echo "${WHITE_FG}SYSTEM FILES${RESET}" >&2
	rsync -a ${_UL_BIN_SYS_DIR} ${_SYSTEM}
}

copy_conv_files () {
	echo "${WHITE_FG}CONVERSION FILES${RESET}" >&2
	rsync -a ${_UL_BIN_CONV_DIR} ${_SYSTEM}
}

copy_etc_files () {
	echo "${WHITE_FG}ETC SUPPORT FILES${RESET}" >&2
	for L in ${_UL_ETC_FILES};do
		cp "${L}" ${_ETC_SUPPORT}
	done
}

copy_zsh_cfg_files () {
	echo "${WHITE_FG}ZSH CONFIG FILES${RESET}" >&2
	for L in ${_ZSH_CFG_FILES};do
		cp "${L}" ${_ZSH_CFG}
	done
	sudo rsync -a ${_ZSH_DIR} ${_ZSH_CFG_USER}
	cp /home/kmiller/.zshrc ${_ZSH_CFG_USER}
	cp /home/kmiller/.zsh_history ${_ZSH_CFG_USER}
}

copy_vim_cfg_files () {
	echo "${WHITE_FG}VIM CONFIG FILES${RESET}" >&2
	sudo rsync -a ${_VIM_DIR} ${_VIM_CFG}
	cp ~/.vimrc ${_VIM_CFG_USER}
}

copy_python_files () {
	echo "${WHITE_FG}PYTHON PROJECT FILES${RESET}" >&2
	rsync -a ${_PYTHON_DIR} ${_PYTHON}
	/bin/rm -f ${_PYTHON}/PROJECTS/ts/venv/.gitignore
	/bin/rm -f ${_PYTHON}/PROJECTS/ts/.idea/.gitignore
	/bin/rm -f ${_PYTHON}/PROJECTS/st/venv/.gitignore
	/bin/rm -f ${_PYTHON}/PROJECTS/st/.idea/.gitignore
}

copy_user_files () {
	echo "${WHITE_FG}USER FILES${RESET}" >&2
	cp -R /home/kmiller/.mvq ${_USER_DIR} 2>/dev/null
	cp -R /home/kmiller/.yts ${_USER_DIR} 2>/dev/null
	cp -R /home/kmiller/.openvpn3 ${_USER_DIR} 2>/dev/null
	cp -R /home/kmiller/Code/LOCAL/ovpn/ovpn ${_USER_DIR} 2>/dev/null
}

# Execution

pushd ~/Code

# Build tree
#[[ -e ${_REPO} ]] && /bin/rm -rf ${_REPO}
#[[ ! -e ${_REPO} ]] && mkdir -p ${_REPO}
[[ ! -e ${_USER_DIR} ]] && mkdir -p ${_USER_DIR}
[[ ! -e ${_DEV} ]] && mkdir -p ${_DEV}
[[ ! -e ${_ETC_SUPPORT} ]] && mkdir -p ${_ETC_SUPPORT}
[[ ! -e ${_PYTHON} ]] && mkdir -p ${_PYTHON}
[[ ! -e ${_SYSTEM} ]] && mkdir -p ${_SYSTEM}
[[ ! -e ${_VIM_CFG} ]] && mkdir -p ${_VIM_CFG}
[[ ! -e ${_VIM_CFG_USER} ]] && mkdir -p ${_VIM_CFG_USER}
[[ ! -e ${_ZSH_CFG} ]] && mkdir -p ${_ZSH_CFG}
[[ ! -e ${_ZSH_CFG_USER} ]] && mkdir -p ${_ZSH_CFG_USER}
[[ ! -e ${_ZSH_LIB} ]] && mkdir -p ${_ZSH_LIB}
[[ ! -e ${_ZSH_LIB_UTILS} ]] && mkdir -p ${_ZSH_LIB_UTILS}
[[ ! -e ${_ZSH_NON_LIB_UTILS} ]] && mkdir -p ${_ZSH_NON_LIB_UTILS}

# Readme
cp ./README.md ${_REPO}

# Updater
cp ./do_commit ${_REPO}

# zsh scripts  
_UL_BIN_ZSH_FILES=("${(f)$(grep -d skip -l '/usr/bin/zsh' ${_UL_BIN_DIR}/*)}")

# zsh libs
LIST=("${(f)$(find ${_UL_LIB_DIR} -maxdepth 1 -type f)}")
for L in ${LIST};do
	[[ $(file ${L}) =~ 'zsh' ]] && _UL_LIB_ZSH_FILES+=${L} || continue
done
echo "Total library files:${#_UL_LIB_ZSH_FILES}"
copy_zsh_lib_utils
copy_non_lib_utils
copy_zsh_libs

# system
copy_sys_files # Clone /usr/local/bin/system
copy_user_files # Clone /home/kmiller
copy_conv_files # Clone /usr/local/bin/conversion

# dev
copy_dev_files
echo "Total development directories:$(find ${_DEV} -maxdepth 1 -type d | wc -l)"
echo "Total development files:$(find ${_DEV} -type f | wc -l)"

# etc
_UL_ETC_FILES=("${(f)$(find ${_UL_ETC_DIR} -maxdepth 1 -type f)}")
echo "Total etc support files:${#_UL_ETC_FILES}"
copy_etc_files

# zsh
_ZSH_CFG_FILES=("${(f)$(find ${_ZSH_CFG_DIR} -maxdepth 1 -type f)}")
echo "Total zsh config files:${#_ZSH_CFG_FILES}"

copy_zsh_cfg_files

# vim
copy_vim_cfg_files

# python project files
_PYTHON_FILES=("${(f)$(find ${_PYTHON_DIR} -maxdepth 3 -type f -name '*py')}")
echo "Total python projects:${#_PYTHON_FILES}"
copy_python_files

pushd ~/Code/REPO
./do_commit
